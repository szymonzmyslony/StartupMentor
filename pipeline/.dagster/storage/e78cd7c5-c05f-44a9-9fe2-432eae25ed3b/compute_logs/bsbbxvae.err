[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - 9363 - LOGS_CAPTURED - Started capturing logs in process (pid: 9363).
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - 9363 - chunked_blog_docs - STEP_START - Started execution of step "chunked_blog_docs".
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - Loading file from: /Users/szymonzmyslony/projects/master-pipeline/pipeline/.dagster/storage/fetched_blog_content using PickledObjectFilesystemIOManager...
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - 9363 - chunked_blog_docs - ASSET_OBSERVATION - DagsterEventType.ASSET_OBSERVATION for step chunked_blog_docs
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - 9363 - chunked_blog_docs - LOADED_INPUT - Loaded input "fetched_blog_content" using input manager "io_manager"
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - 9363 - chunked_blog_docs - STEP_INPUT - Got input "fetched_blog_content" of type "Any". (Type check passed).
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - https://www.ycombinator.com/library/8f-how-to-spin-your-scientific-research-out-of-a-university-and-into-a-startup
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - This is advice for people who have done scientific research at a university and are considering starting a company to
commercialize it.

At YC, we've funded more than 75 companies in this situation. We also recently went on a [Bio
Tour](https://blog.ycombinator.com/yc-bio-tour-2020/) where we went around to research universities and talked with
hundreds of students and professors in the life sciences about commercializing their research. These are the most common
topics founders have asked us about.

## Deciding who should spin out

In a typical spin-out situation, there are several people who worked on the research, including a mix of students, post
docs and faculty. The first thing you need to decide is who is going to work on the company and who is going to stay at
the university.

A lot of scientific founders have misconceptions about how to structure their founding team. Here are the most common
ones.

*Misconception 1. You can start a company while continuing your academic career*

Here is a blunt fact that often makes founders uncomfortable: your company has little chance of success unless someone
who worked on the original research is willing to leave their university role to start this company.

If you are a student graduating soon, you can just wait until you graduate; that‚Äôs a perfect time to start a company.
But otherwise, at some point you will have to make an intentional decision to leave so you can run the company.

*Misconception 2. You should find a CEO to run the company*

Too many scientists believe that they should remain in academia and find a CEO to start a company around their
invention. This is almost always a bad idea. For one, it‚Äôs hard to find a great CEO to run a company at this early
stage. Truly great CEOs are scarce, and they usually have much better opportunities available to them than running an
idea-stage startup with no funding. As a result, most scientists that try this approach either never find a CEO or end
up settling for a mediocre one. It‚Äôs even worse if your university tries to find a CEO for you.

But even if you could draft any person in the world to run your company, it still probably wouldn‚Äôt be a good idea. The
best CEO for this stage is one of the people who did the original research. The people who did the original research
will be far more invested in the success of the venture than any outsider. They are also far more qualified to build a
company around it because their domain knowledge of the field is much more valuable than whatever general business
skills an outside CEO would bring.

A related misconception is believing that the research is done and that all that‚Äôs left is to commercialize it. If this
were true, perhaps an outside CEO would make sense. However, it rarely works out that way. Usually you find that the
thing the market wants is not quite the thing that you‚Äôve invented, and that more research needs to be done. The
original inventors can take this feedback and make adjustments; an outside CEO will just be stuck.

*Misconception 3. You need someone with business experience on the founding team*

Many scientists think that to start a company you need someone with prior business and financial experience. This is
just not the case. In the first couple of years, there is typically very little "business" to be done, and whatever
business skills you need you will pick up along the way. Most of the scientists we fund at Y Combinator have no prior
experience in business.

People who work in business like to make it sound hard, as if business were like quantum physics, a field that needed to
be studied for years to master. The fact is, it's not even close.

*Misconception 4: You should raise money first, then leave the university*

Often, people are unsure of whether they want to risk leaving a stable academic role to pursue a startup. So they take
their idea and pitch it to some local VC firms. They figure if it's a good idea, the VC firms will fund them, validating
the idea and giving them a smooth transition out of their university job and into a well-funded company.

While VC firms will occasionally fund spin-outs this way, usually they don't. Unfortunately, too many founders get
turned down by VCs and conclude that their idea must be bad and give up. Actually, the issue is that it's just too early
at this point to raise money from VCs.

Typically, founders will need to work full-time on their company for 1+ years before it is ready to raise a
multi-million dollar round from VCs. In the meantime, they sustain themselves by self-funding from their savings,
getting government research grants, raising a small amount from friends and family, or raising a small "pre-seed" round
from angel investors, accelerators, or seed funds.

Founders who won't quit their job before they raise money often get stuck in a catch-22. They are waiting for an
investor to take a bet on them before they quit their job. But the investors are waiting for the founders to believe
enough in their own company to quit their job\!

*What I recommend*

The ideal situation is that two or more people from the lab who did the work leave together to start the company as
cofounders. One full-time founder is also ok. One of the people who leave to start the company should be the CEO.

In many cases, other people who were involved in the research want to remain behind at the university but still
contribute in some way. That‚Äôs fine. Those are often called ‚Äúacademic cofounders‚Äù or ‚Äúscientific cofounders‚Äù and they
can still be very helpful. But the founders who are going to be full-time are the most important.

## Deciding when to spin out

In the early stages of developing a new technology, you‚Äôll make faster progress still at the university, taking
advantage of university resources. It‚Äôs the ideal place to do the initial experiments to prove that your idea could
work. You can even do some testing of market demand for a new product, through programs like NSF I-Corps or just by
calling up potential customers/stakeholders. At some point, though, that will flip, and being at a university will start
to slow you down, because universities are not set up to commercialize technologies.

It‚Äôs possible to leave too early and possible to wait too long before leaving. Unquestionably, though, the far more
common mistake is to wait too long.

Most founders wait too long because leaving is scary. Academia is a comforting environment. No one is pressuring you to
leave and leaving seems risky so the natural thing to do is to keep delaying it. There's a temptation to make the
technology perfect before spinning out, and there's always "one more experiment" you could do. If you don't stop this
cycle, you'll never leave.

Often after people do leave, they realize that a lot of the work they did in the last year was wasted, because some of
their assumptions about what the market wanted were wrong. They also realize that they are now moving so much faster as
a company that they could have saved months of time by spinning out a year earlier.

## Splitting up Equity

After you've decided who is going to be full-time on the startup and what everyone's role will be, you'll want to split
up equity.

As important as this decision is, founders often don't have a good framework for making it. Here is the framework I
recommend. It has just two rules<sup id="footnoteid1"><a href="#footnote1">1</a></sup>.

1)  Founders who will be working on the company full-time should get equal or nearly equal amounts of equity.

2)  Founders who will be leaving their job to work on the company full-time should get much more equity than founders
    who are going to remain in academia. Academic cofounders should typically own no more than 10% unless they are going
    to continue to be hands-on<sup id="footnoteid2"><a href="#footnote2">2</a></sup>.

My colleague Michael Seibel previously wrote a [great
essay](https://www.ycombinator.com/library/5x-how-to-split-equity-among-co-founders) about why rule \#1 is so important.
Rule \#2 is important because it is the full-time founders who will invest years of their life exclusively in making the
company successful, and they need to have enough ownership that it makes sense for them to do that.

The biggest conceptual mistake I see scientific founding teams make here is that they think the purpose of allocating
equity is to reward past contributions, when actually it‚Äôs mainly to anticipate future ones.

Here's a blunt fact about starting a company. If you are going to make a new company successful, you will probably have
to work on it for 7-10 years post spin-out. That's a long time\!

If you are just spinning out of a university now, you might feel like you're halfway done, but actually you are on
mile 2 of a 26 mile marathon. The academic founders may have been instrumental in the first mile, but it is the
full-time founders who will be primarily taking you the other 25. The equity split between founders has to reflect the
expected contributions over the whole marathon.

One consequence of this is that your equity split in the new company will not necessarily have any relation to your
seniority within the original academic team. It‚Äôs often the case that the people leaving are more junior, while the
senior people / faculty remain. In that case, the founders who leave will end up with much more equity than their former
boss. This can be an awkward conversation, but it‚Äôs entirely sensible.

## Negotiating with tech transfer offices

If you are going to commercialize research started at a university, you will probably need to negotiate the rights to
the intellectual property. The group at a university that does that is the technology transfer
office.<sup id="footnoteid3"><a href="#footnote3">3</a></sup>

In the past, tech transfer offices had a well-deserved bad reputation. They were known for being slow and bureaucratic,
and for forcing onerous terms onto fragile young startups. Many times the terms they insisted on strangled the very
companies they were trying to create. There was so little transparency in the industry, it was hard for founders to know
what terms were fair.

Fortunately, things have gotten better. There is now much more information available for founders. Tech transfer groups
at the universities in major startup hubs like Harvard, MIT and Stanford now give startups reasonable terms (though they
still take too long to do it). At universities that have not seen many successful spin-outs, it's hit-or-miss. A few
universities are now using ‚Äú[express](https://ctl.cornell.edu/entrepreneurs/fasttrack/) [license
agreements](https://techtransfercentral.com/2013/10/28/how-five-ttos-are-using-express-licenses-successfully/)‚Äù, preset
agreements that require little to no negotiation; hopefully this will become more common.

There are typically four key terms<sup id="footnoteid4"><a href="#footnote4">4</a></sup> in these agreements.

1)  Equity. Typically the university will get equity in the company. This is ok as long as it is not too much. 3-5% is
    typical. Above 10% will cause problems.<sup id="footnoteid5"><a href="#footnote5">5</a></sup>,
    <sup id="footnoteid6"><a href="#footnote6">6</a></sup>

2)  Royalty. This means that you pay a percentage of revenue or profits to the university. If this is too high, it can
    affect the viability of the company to raise money and operate. Ideally you would make this zero. If you can't do
    that, try to keep it \< 5%, and to have it terminate after a certain number of years and/or a certain level of
    payments.

3)  Milestone payments. I.e., "You owe us $250K when the company raises its first $10M", or ‚ÄúYou owe us $500K when you
    reach Phase II clinical trials‚Äù. Because cash is scarce in the early days of a startup, you want to keep these as
    low as possible. You should never need to spend more than a few percent of the money you raise.

4)  Exclusivity. If a license is not exclusive, the university could theoretically turn around and license the same IP
    to a big company to go compete with you. This sounds like a real problem, but often it‚Äôs not. For many inventions,
    in practice other companies won‚Äôt know how to use the IP and won‚Äôt value it until you've done years of work further
    developing it (at which point the university-owned IP isn‚Äôt
    sufficient).<sup id="footnoteid7"><a href="#footnote7">7</a></sup> It may be optimal to have a non-exclusive license
    initially with an option to make it exclusive later, or a right of first refusal clause.  
    Here is some advice for negotiating these agreements.

You should get in touch with founders of other companies that have recently negotiated agreements with the same office.
Find out what terms they got and ask for advice on negotiating strategy. You can also ask investors, lawyers, and
advisors. You should get as many data points as possible.

If you‚Äôre a student or post doc, it‚Äôs valuable to have the buy-in of the professor running your lab. Professors have
sway at universities and will give you leverage over a stubborn tech transfer office. You also want to make sure that
they don‚Äôt have any competing plans to do their own spin-out with the technology. Often by getting them onboard as an
advisor early, they will be helpful in securing a good deal, and they‚Äôll also give you credibility with investors.

If the agreement feels too onerous, ask yourself if you need it at all. It might be cheaper to recreate something
similar on the company‚Äôs time.<sup id="footnoteid8"><a href="#footnote8">8</a></sup>

More dramatically, you might end up not even using what you‚Äôre planning to license, because startups pivot all the time.
I‚Äôve worked with many companies that fought tooth and nail over their tech transfer agreement, only to find that a year
later they'd totally changed their approach and abandoned the IP they fought so hard to license\! One way to protect
against this is to ensure that any royalties are directly tied to the use of the technology.

Consider taking an option to license the IP in the future, rather than negotiating a full license agreement now. An
option is often much cheaper and simpler to get, and allows you to defer the final negotiation for six to twelve months.
That also gives you time to see how much you are using the original IP before committing to licensing it.

Beware of well-meaning but bad advice from university entrepreneurship offices. Some entrepreneurship offices at
universities are great, but unfortunately some are not. Worse, some have their own agendas, like helping local
investors. Consider whether the people you‚Äôre talking to have a track record of many truly successful companies when
listening to their advice.

Start the conversation with this office as early as possible. This will give you more time to work out an agreement and
also let you find out the lay of the land.

Don't wait for the agreement to start the company. Getting an agreement can take 6 months or longer. Many investors
(including YC) will fund companies before they have an agreement in place. The more progress you make on the company,
the more leverage you have in the negotiation.

## After the spinout

You‚Äôll need to incorporate your company. If you are based in the US (and possibly even if you aren‚Äôt), you‚Äôll want to
incorporate as a Delaware C Corporation, no matter which state you are physically
in.<sup id="footnoteid9"><a href="#footnote9">9</a></sup>

It may well make sense to continue collaborating with your lab. They may produce new work which you want to license.

In some cases, you may want to continue doing experimental work using university labs. University core facilities are
commonly available to companies, albeit for higher fees. It‚Äôs possible to save a lot of money using university resources
instead of buying equivalents commercially. That‚Äôs fine, as long as it isn‚Äôt slowing you down significantly and doesn‚Äôt
create IP issues. Unfortunately there is often a tradeoff between speed and cost.

A big adjustment for founders from academia is internalizing a different incentive structure. In academia, you‚Äôre
rewarded for new discoveries and for publications. In startups, there is zero reward for new discoveries and hardly any
for publications. In startups, the only thing that you are rewarded for is making tangible progress towards a
commercially valuable product.

A side effect is that in startups, there is no intrinsic reward for doing something new or difficult. Any time there is
a shortcut where you can copy or buy something that already exists, you should take it. In startups, you want the ‚Äúnew
part‚Äù of what you are doing to be as small as possible, and everything else to be as boring and low risk as possible.

Another big adjustment is the pace. In startups, you are racing against the clock. If you don‚Äôt hit milestones before
your current funding runs out, your company will run out of money and die. That kind of hard constraint forces focus
like nothing else. As a result, founders who leave academia to do YC often tell us they got more done in the three month
YC batch than the prior year.

If that‚Äôs made startups sound stressful, they are, if only because so much is at stake. When you‚Äôre starting your own
company, the highs are higher and the lows are lower than any regular job. If you want to learn more about what it feels
like, there‚Äôs a great essay called ‚Äú[What Startups Are Really Like](http://paulgraham.com/really.html)‚Äù.

There has [never been a better time](https://blog.samaltman.com/hard-startups) to start a biotech or hard-tech company.
There is [far more funding available](#footnoteid9) now than ever before, and a well developed ecosystem to support
founders at every stage. Today most grad students and postdocs choose between staying in academia and getting a job in
industry. We think there will increasingly be a third option: to start their own company.

**Thanks**  
I couldn‚Äôt have written this without the help of many YC founders who did spin-outs themselves. Special thanks to Uri
Lopatin, Birgitt Boschitsch, Aaron Lazarus, Alexis Rovner, Juan Medina, Glenn Markov, John Ramunas, Wesley Wiersen,
Lindsay Amos, Ravi Pamnani, and Andrew Jajack for reading drafts of this.

## Notes

<b id="footnote1">1.</b> Separately, it‚Äôs also very important for all founders to have a [vesting
schedule](https://stripe.com/atlas/guides/equity) for their shares. It should vest over at least four
years.[‚Ü©](#footnoteid1)  
<b id="footnote2">2.</b> Being ‚Äúhands-on‚Äù means more than giving advice. It means spending at least 1 day / week doing
active work for the company - writing grants, being in the lab, going to sales meetings, etc. Their equity vesting
should be tied to them continuing to take a hands-on role.[‚Ü©](#footnoteid2)  
<b id="footnote3">3.</b> The names vary a little - sometimes it‚Äôs called the ‚Äúoffice of technology licensing‚Äù, or the
‚Äúinnovation office‚Äù, but I‚Äôll use this term.[‚Ü©](#footnoteid3)  
<b id="footnote4">4.</b> Here are some less critical but still common terms and quick advice for them: (5) patent
prosecution - you should have control of the patent filing and patent strategy, (6) sublicensing - likely important for
you to be able to sublicense, (7) funding requirements - try to avoid, (8) upfront and annual fees - ok if relatively
small, (9) rights to future IP coming out of the same lab - may or may not be worth it, (10) pro rata rights so the
university can invest to maintain their ownership - acceptable if the university can decide quickly and if it only
applies to priced rounds, not convertible securities.[‚Ü©](#footnoteid4)  
<b id="footnote5">5.</b> Sometimes the terms call for a ‚Äúpercentage of proceeds from any liquidity event‚Äù instead. This
is worse than equity because it can‚Äôt be diluted. So if your university insists on this because they can‚Äôt accept
equity, it should be a very small percentage, about ‚Öì of the equivalent equity percentage.[‚Ü©](#footnoteid5)  
<b id="footnote6">6. </b> Another wrinkle is anti-dilution clauses where these equity percentages don‚Äôt dilute until
you‚Äôve raised $xM.[‚Ü©](#footnoteid6)  
<b id="footnote7">7.</b> Related to this, some universities require a ‚Äúmarketing period‚Äù where they shop the invention
around to other potential buyers but usually this is a formality because they rarely get interest.[‚Ü©](#footnoteid7)  
<b id="footnote8">8.</b> Also, if you have a reasonable path to recreating it, that can give you leverage over a tech
transfer office. If they know you are busily working on recreating it, the value of the license deal goes down every
day.[‚Ü©](#footnoteid8)  
<b id="footnote9">9.</b> Two easy options for doing this are <http://clerky.com/> and <https://stripe.com/atlas.[‚Ü©][7]>

[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - Has returned md secitons True paragraphs from the document.
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - https://www.ycombinator.com/library/4j-startup-hr-what-s-important
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - In the early stages of working on a startup, there is little time to spend on areas other than product development and
talking to users. However, as you start to hire people and build a team, there are HR fundamentals worth investing in.
Having basic HR practices in place can help your startup scale quickly and may eliminate unforeseen and often costly
problems down the road.

## The People Person

Many founders ask me ‚Äúwhen is the right time to hire a HR person?‚Äù. My recommendation is around 20-30 employees or after
a Series A round. Bringing on a dedicated HR person earlier than this may make sense for some companies if they intend
to scale their workforce quickly or for other reasons; for example, a non-exempt workforce that needs managing. (See
below for more information on ‚Äúclassification.‚Äù)

In the absence of dedicated HR, there should be someone on your team acting as your ‚Äúpeople person.‚Äù This person is not
a founder and acts as a sounding board or liaison for your team. Having a people person that your team can come to and
voice their concerns is important. This person should have good judgment, be intuitive, and know when to escalate
issues. It is not their job to solve HR issues, but rather to receive feedback from your team and keep a pulse on
cultural issues that may be brewing.

This is not to say employees should not be encouraged to speak with their founder(s), though often employees are not
comfortable doing so and need another outlet. Providing your team with multiple ways to voice their concerns may help
you resolve issues faster and promote a culture of transparency and open feedback.

## Hiring

There is little need in the early stages to have a robust hiring regime, however, a few hiring fundamentals can go a
long way.

First, appointing a person to manage your hiring pipeline and keep candidates moving through each phase of the hiring
process is a good idea. Your hiring experience provides insight into your company culture and a positive candidate
experience may be the reason a candidate accepts one offer over another. For those candidates who are unsuccessful,
closing the loop with them is important and shows that you respect their time and appreciate their interest in your
company.

Second, create a hiring plan and formulate a set of questions for each interviewer during the onsite. Too often the same
surface level questions are asked over and over again when there's no internal interview plan. Each interviewer should
play a role in the hiring process and deep dive into different areas of the candidate assessment for eg. culture fit,
soft skill assessment, technical assessment, management approach, working style, and communication.

## Classification

In recent years, the classification of personnel has been a hot topic. It is important that your workforce is classified
correctly. Classification categories include regular full-time, part-time, temporary and seasonal employees that are
either exempt or non-exempt. Other classification categories include W2 employee versus 1099 contractors and
consultants. YC company [Gusto](https://gusto.com/) has some helpful information on its Help Center regarding [Employee
Classification
Options](https://support.gusto.com/team-management/team-payments/pay-rates/1001671771/Employee-classification-options.htm).
The CA EDD also has a [worksheet](https://www.edd.ca.gov/pdf_pub_ctr/de38.pdf) to determine if a worker is most likely
an employee or independent contractor.

Misclassification can be a costly mistake with potential back payment and penalties. Keep in mind that there are
specific laws for nonexempt workforces pertaining to meal breaks, overtime, and holiday pay that your company must
adhere to despite the size of your team.

## Payroll & Benefits

Employee benefits are a big overhead expense for startups. In the early stages, you don‚Äôt have to offer a full suite of
employee benefits from day one, though keep in mind that quality benefits are a drawcard for many potential candidates.

TIP: Offer a silver or gold tier base plan with an optional buy-up plan. Often startups pay 100% of premiums for a base
plan (generally a silver or gold tier plan) and give employees the option to enroll in a higher tier plan, with the
additional cost of the premium paid by the employee. This approach helps startups anticipate their employer costs while
giving flexibility to employees.

As for payroll, keep it simple. I‚Äôm a big fan of providers such as [Gusto](https://gusto.com/),
[Zenefits](https://www.zenefits.com/) and [Rippling](https://www.rippling.com/) that administer both payroll and
benefits in one portal. When assessing payroll and benefit providers, look at the amount of backend administration
needed, available integrations such as 401(k), Flexible Spending Accounts and bookkeeping services, and the tools
available to employees such as dashboards, calculators and online support.

## Company Handbook

A company handbook outlines the policies and procedures that govern your company. It outlines policies such as paid sick
leave, paid time off, parental leave and other state and federal mandated laws. An acknowledgment form is signed by each
employee, confirming that the employee 1) received the handbook, 2) has read and understands the contents of the
handbook and 3) will adhere to the policies in the handbook.

TIP: Outside legal firms often provide free company handbook templates to their clients. The template forms the basis
for your handbook and can be easily customized. YC Company Human Interest has a free [Startup Employee Handbook
template](https://humaninterest.com/blog/startup-employee-handbook-template/) available on its site and note handbook
examples from Zappos, Valve and The Motley Fool.

## Onboarding Process

Outlining a clear onboarding process from when a candidate accepts an offer to joining your company will provide a
positive introduction and get your new employees up and running quickly. Some startups use an ‚ÄúOnboarding Guide‚Äù to help
educate their new employees. An Onboarding Guide outlines all the need-to-know items such as what internal tools the
team uses, team Slack channels, where to find important information, employee benefits, perks and where to find the
snacks (always important).

Hub has published [The Ultimate Guide for Onboarding for Lean
Startups](https://blog.thehub.io/blog/the-ultimate-guide-to-employee-onboarding-for-lean-startups/) including helpful
tips, tools and a timeline for successful onboarding.

## Terminations

It‚Äôs inevitable that you will have people leave your company, whether voluntary or involuntary. It is important to have
a process for offboarding to ensure the employee that is leaving receives their final paycheck (including all
reimbursements, commissions, bonuses, etc), company equipment is returned and IP is protected. A separation agreement
outlines the conditions of the termination and may include a separation amount. It is a good idea to use your legal
counsel for guidance and ensure your separation agreement is updated according to the specific situation at hand.

Lastly, exit interviews are a good way to get insight into your company culture and areas that need more attention.
Sometimes the feedback from exit interviews can be good, bad or downright ugly. Despite the type of feedback, having
data points and examples of positive or negative aspects of your company is a big plus and may help you make important
changes.

[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - Has returned md secitons True paragraphs from the document.
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - https://www.ycombinator.com/library/2z-pinduoduo-and-the-rise-of-social-e-commerce
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - Across the globe, as the novel coronavirus moves us from communal spaces into the confinement of our homes, our social
experiences are forced to adapt. Beyond the social networks we already know and use, we are finding new ways to
integrate social into our online lives. At Y Combinator, we are considering what this might mean for the future of
e-commerce. For several years, we have had our eye on Pinduoduo as an interesting case study. But now, as China is
recovering from the impact of COVID-19, Pinduoduo and their social-shopping approach is even better poised to fully
capture the offline-to-online transition in commerce. The success of Pinduoduo in China suggests there is a huge
opportunity for social commerce platforms to emerge in other regions.

**But first, a bit of background**

When Pinduoduo launched in 2015, there was little room for a new commerce platform in China. Two major e-commerce
platforms, JD and Taobao/TMall (sub brands of Alibaba), dominated online commerce in China, much like Amazon dominates
in the US. During that same year, JD and Taobao generated a combined $433B of gross merchandise
value.<sup id="footnoteid1"><a href="#footnote1">1</a></sup> And yet, five years later, Pinduoduo is defying
expectations, skyrocketing from a start-up to
a 57<sup id="footnoteid2"><a href="#footnote2">2</a></sup>-billion-dollar-company with an active buyer base of 585
million that generated over $144B of Gross Merchandise Value in the last twelve
months.<sup id="footnoteid3"><a href="#footnote3">3</a></sup> In 2020, it is China‚Äôs second largest e-commerce platform
on an active user basis only lagging behind Alibaba.

Pinduoduo found room in e-commerce, not as a competitor to search-based websites like JD, but as a new e-commerce
platform focused on interactive and social shopping experiences online. Social shopping may seem like a new concept, but
the reality is that in the physical world, shopping is meant to be ‚Äúinteractive and fun‚Äù and purchases are regularly
informed by friends and family. Consider how much harder it feels to purchase a new clothing item without immediate
feedback from friends. E-commerce platforms like JD, Alibaba, and Amazon don‚Äôt account for this. Instead, they optimize
for efficiency, funnel conversion, and purchase rates. Pinduoduo, on the other hand, has tried to mimic the offline
shopping experience online by building community via their team purchase model, driving engagement via fun and
interactive games and rewards, and offering personalized experiences and value via recommendations.

Consumers‚Äô desire for social engagement while shopping is highlighted by sales within categories. Only 29% of
apparel, 11% of health & personal care, and 3% of food & beverage purchases were expected to happen online in 2020 in
the US (compared to 55% and 43% of books/music and computers/electronics purchases,
respectively<sup id="footnoteid4"><a href="#footnote4">4</a></sup>). These numbers reveal a missing element in
e-commerce. Social shopping is particularly important for categories where consumers seek feedback or recommendations
from friends. Pinduoduo is one of the first companies to successfully create a social shopping experience online, and
has accelerated the transition of commerce from offline to online in China.

In our view, Pinduoduo‚Äôs rapid success in social commerce will be replicated by others globally, which will continue to
drive commerce in social-driven categories online. And so, to understand the success of Pinduoduo is to understand the
future of global e-commerce.

**Creating Community via Team Purchase**

The core of the Pinduoduo experience is team purchase, where buyers form a group in order to receive discounts from
suppliers. The user experience, as laid out in the graphic below, is as follows: (1) for each item, merchants decide two
prices ‚Äì one for individual purchase and one for team purchase. If the user opts for a team purchase, he or she may
either (2.1) initiate a team purchase, or (2.2) join an existing team purchase. If the user has initiated a team
purchase, he or she may use social platforms such as WeChat to proactively encourage friends to join their team (3.1) or
more passively wait for other buyers to join the purchase on the Pinduoduo (Pinduoduo) platform (3.2). A team needs to
be formed within 24 hours to have the order confirmed. Once a team is formed, the purchase is confirmed and the product
is shipped within 48 hours.

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/PDD-Overview.jpg" alt="" width="1004" height="495" class="alignnone size-full wp-image-1104308" />

Nearly all Pinduoduo transactions are completed using team purchase. In the early days, the size of many groups was
large (e.g., 10+), but as Pinduoduo has scaled the group size requirements have declined. Team purchase is beneficial to
both buyers and manufacturers; buyers benefit from better prices for goods they want and sellers benefit from increased
demand and better visibility of future demand. In addition to driving down prices, team purchase helps solve the ‚Äútrust
deficit‚Äù of retail in China‚Äôs developing cities, where more
than 80%<sup id="footnoteid5"><a href="#footnote5">5</a></sup>) of retail is unorganized and consumers rely heavily on
social recommendations to initiate transactions.

Pinduoduo‚Äôs team purchase is often compared to Groupon in the US because they both enable a form of group buying. But
the models are actually very different. First, Pinduoduo deals are designed by sellers, but initiated by consumers
(i.e., users must create or join a group of a certain size to access a deal) whereas Groupon deals are designed and
managed by sellers. Second, Pinduoduo‚Äôs team purchase is used for everyday goods (e.g., fruits/vegetables, apparel) that
are valuable to consumers vs. one-off products/experiences that haven‚Äôt sold well elsewhere. Third, products on
Pinduoduo are offered by geographically diverse merchants from across China and increasingly from all over the world.
This is in contrast to the mostly local sellers that leverage Groupon to drive customers to their stores/locations. This
results in a much stronger consumer value proposition as users are getting discounts on goods they might need to
purchase anyway vs. letting sellers dictate discounts by aggregating demand on low-value goods or excess inventory.

To maximize this effect, Pinduoduo launched in the fruits and vegetables category. This was strategic for two
reasons: 1) incumbents were focused on non-perishable items, so competition was limited and 2) fruits and vegetables are
lower order value, high frequency goods, which means users had a reason to use Pinduoduo regularly. When potential
buyers saw a great deal they would forward it to their neighbors and friends via WeChat to create a team of 10+ buyers
to be able to purchase the product. In return, the group initiator would get produce for free as they helped Pinduoduo
acquire 10 incremental users. Because team purchase drove organic sharing of the product, Pinduoduo was able to grow its
user base very quickly. Only one month after launching their first party application in January 2016 (transactions prior
to this happened via WeChat), Pinduoduo already had over 10 million customers. Only four years later, Pinduoduo has
grown to 585M active buyers. To compare, Alibaba crossed the 500M active buyer threshold 14-15 years after launching its
consumer facing marketplace vs. just 4 years for Pinduoduo. The take away for startups is that the team purchase model
is significant because it enables behaviors associated with offline commerce (e.g., sharing products or ideas with
friends, browsing a shopping mall with friends) in an online setting. Team Purchase helped Pinduoduo grow quickly and
create a unique recommendation engine based on users‚Äô social interactions. While Team Purchase may be unique to China
today, we expect social e-commerce to be global. New commerce platforms that can leverage social relationships will
accelerate the offline to online transition and if you are able to tap into groups of social relationships vs.
one-to-one relationship the faster your platforms will scale. PDD has one of the most powerful network effects in the
world ([Reed‚Äôs law](https://en.wikipedia.org/wiki/Reed%27s_law): The value of a group-forming network is proportional to
number and the ease with which groups form within it. Think Slack, WhatsApp Groups -- they all grew exponentially as
they could tap into groups of social relationships)

While Team Purchase was the main reason for Pinduoduo‚Äôs rapid growth, a significant enabler of Pinduoduo‚Äôs virality was
the widespread use of WeChat as a platform in China. Tencent (WeChat‚Äôs owner) is a large investor in Pinduoduo, and as a
result was happy to let Pinduoduo grow on top of their ecosystem. We think it is highly unlikely that Facebook would
allow a social commerce application like Pinduoduo to be built on top of Messenger or Instagram in the US. That said,
messaging is fragmented in the US, so this is not an issue for US-based social e-commerce companies.

Users visit Pinduoduo without any specific intent, much like visiting a real-world shopping mall. In a shopping mall,
the time that a consumer spends at the mall directly correlates with the amount he or she buys. As such, Pinduoduo has
gamified the experience to maximize the amount of time a user spends on the app irrespective of whether they make a
purchase or not. The primary features/experiences that have incentivized sharing and usage are Daily Check-Ins, Price
Cuts, Card Programs, and Mini Games. Social commerce does not just mean connecting user accounts to Facebook. It means
investing in creating physical world experiences online -- specifically bringing the fun of shopping offline to online
platforms. We will walk through how Pinduoduo has implemented this below.

**Daily check-ins**

The daily check-in is a feature, prominently featured in the center of the home page. It encourages daily usage by
rewarding users with redeemable points each time he or she checks into Pinduoduo. The user experience is laid out in the
image below. First, the user clicks the yellow icon to administer a check-in. Each time the user checks-in they are
granted a small amount of money and/or credit. Over many months (and many check-ins), these rewards accumulate. In the
example below, the user has accumulated 26.6 RMB of rewards. To cash out in the form of a no minimum spend voucher, the
user has to reach a certain minimum value (i.e., 30 RMB).

The daily check-in is a simple yet brilliant feature that encourages users to engage with Pinduoduo on a daily basis.
While each check-in does not generate revenue for Pinduoduo, the product experience eventually ties back to commerce
if/when users redeem their vouchers. This theoretically should yield a higher customer lifetime value for Pinduoduo.

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/2.png" alt="" class="alignnone size-full wp-image-1104298" />

**Price Chop**

Price Chop is a feature that allows users to get products for free by sharing a custom link with their friends. The
feature is outlined in detail below. Once in the Price Chop section of Pinduoduo, the user selects the goods that they
want for free. Upon selection, a 24 hour timer begins. To get the item for free, the user must share their link with as
many friends as possible. Every friend that clicks on the link and engages with Pinduoduo (no purchase required) drives
an incremental discount for the initiator. If you don't reduce the price to 0 within 24 hours you don't get the item for
free and you have to start all over again\!

The product mimics the experience of ‚Äúleveling‚Äù in a massive online multiplayer game like World of Warcraft whereby it
becomes harder to level up as you graduate to higher levels. In the case of Pinduoduo, the difficulty is customized
based on the user (i.e., easier for low-engagement users) and the item (i.e., expensive items are more difficult to
chop). Additionally, similar to leveling, as you get closer to 0 (i.e., a higher level) each incremental friend that
engages with your link grants smaller and smaller discounts.

Similar to Daily Check-In, Price Chop encourages users to engage with Pinduoduo, and eventually ties the engagement to
an order on the commerce platform. But unlike Daily Check-In, Price Chop incentivizes users to share Pinduoduo with
their social network. So in addition to increasing customer lifetime value, Price Chop also helps Pinduoduo efficiently
acquire customers via user-user sharing of the product.

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/3.png" alt="" class="alignnone size-full wp-image-1104299" />

**Card Program**

Pinduoduo‚Äôs card program is designed to encourage users to share the product amongst friends and to save money via
vouchers/special discounts. Pinduoduo has created several different cards that either (1) encourage certain user
behaviors or (2) provide utility to a Pinduoduo user. The three most popular cards are the Free Pass Card, the Black
Brand Card, and the Brand Card.

The Free Pass Card is similar to a loyalty program where users can enjoy a ‚Äúteam purchase discount‚Äù without having to
join a team. Users usually get one Free Pass Card after making two purchases on Pinduoduo.

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/4.png" alt="" class="alignnone size-full wp-image-1104300" />

The Brand Black Card encourages users to leave reviews on the platform by offering them a discount on branded products
in return. Pinduoduo gives users a Brand Black Card after they have posted 2 - 4 reviews on the website. This is
important as consumers rely on reviews and recommendations from previous buyers when making purchase decisions. The
Brand Black Card incentivizes a good user behavior that makes the platform better for the entire user base.

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/5.png" alt="" class="alignnone size-full wp-image-1104301" />

The Brand Card aims to promote Pinduoduo‚Äôs branded products. Consumers get a Brand Card after they have made a purchase
on Pinduoduo. They can share their brand cards with friends via WeChat, to attract their friends to browse and buy
branded products from Pinduoduo. It is an effective way to encourage users to buy branded products they would not
normally buy because the recommendation/card was sent to them by a trusted friend.

This is also important because Pinduoduo has historically been used to primarily buy non-branded products. The Brand
Card is an effective incentive mechanism to increase Pinduoduo‚Äôs branded product market share in China.

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/6.png" alt="" class="alignnone size-full wp-image-1104302" />

**Mini Games**

Pinduoduo wants users to engage with the platform as often as possible, and they want the experience to mimic real-world
shopping. As such, they want users to engage with the app to have fun, even if it does not immediately translate into a
purchase. Pinduoduo now hosts in-app games to help drive up daily time spent on the platform. The first popular game on
Pinduoduo was Duo Duo Orchard. Think of Farmville except now the rewards are real physical goods. The game is simple ‚Äì a
user creates and nurtures a virtual fruit tree to eventually yield a real box of fruit shipped to his or her address. It
already has more than 11M DAUs\!

<img src="https://blog.ycombinator.com/wp-content/uploads/2020/05/7.png" alt="" class="alignnone size-full wp-image-1104303" />

Though not multiplayer, Orchard has social cooperation aspects that drive up network engagement as well. Once users
choose a tree to create (e.g., mango, lemon, macadamia nut), they need to nurture the tree with water and fertilizer.
The more you shop on Pinduoduo the more water droplets you receive to nurture your tree. To encourage more interactions
with friends, you can also share the water droplets. Team purchases and sharing product links enables users to obtain
special tools like a water can, decorations for your orchard, or bags of fertilizer, which accelerate the growth of your
tree. Pinduoduo is expanding its in app game selection. It recently launched DD Bank, a piggy bank game where users
accumulate exchangeable coins over time.

Games like Duo Duo Orchard and DD Bank are ingenious because progress or ‚Äúleveling‚Äù is tied to behaviors that drive
financial goals for the company. By encouraging users to play games on Pinduoduo, they are able to create a win-win-win
situation for merchants, consumers, and themselves. More specifically, merchants see more volume, consumers have fun and
receive unique discounts, and Pinduoduo generates revenue.

**Creating Value by Offering Personalized Recommendations**

Lastly, unlike search-based platforms, Pinduoduo is highly personalized and recommendation based. This means that users
visit Pinduoduo without any specific intent, much like visiting a shopping mall in the physical world. Based on
information such as who a user‚Äôs friends are, what their favorite categories are, and which of their friend‚Äôs they
trust, Pinduoduo can make recommendations that are personalized to each user. Pinduoduo is uniquely positioned to do
this due to user-user sharing of the product caused by Team Purchase. The data aggregated by the platform allows the
company to optimize what items a user encounters on the app by highlighting (1) products that trusted friends have
already purchased or recommended and (2) products in a users‚Äô favorite categories. For new customers, the standard
practice is to show new users different categories (based on what they know about that user and their friends) and see
how they interact with those categories. This is then used to create your buying persona and helps inform future product
recommendations.

Beyond offering personalized product recommendations, Pinduoduo also thinks about value-for-money as a personalizable
concept. Based on a user‚Äôs purchase/browsing history, Pinduoduo knows whether a user values high-cost branded clothing
or low-cost non-branded clothing. Based on a user‚Äôs specific buying persona, Pinduoduo will only show you clothing items
that match your willingness to pay.

**The Future of Global E-Commerce**

There is a huge opportunity for companies to build social into their commerce platforms to take share from transactional
platforms and expand e-commerce‚Äôs overall share of spend. The success of team purchase may be specific to the commercial
landscape of China, but the insights Pinduoduo has surfaced about social integration in commerce is likely entirely
universal. Going forward, when building their products, founders should consider the insight that shopping is a social
activity. Web 1.0 platforms - including Amazon - optimize for efficiency and don‚Äôt serve trust-based categories very
well. We firmly believe that by building sharing use cases and fun experiences that mimic the fun of real-world shopping
into products, commerce‚Äôs offline to online transition will accelerate.

There are large indicators that there is major demand for more sophisticated social commerce in the US marketplace
already. An obvious example of this is Instagram, which has over one billion users and is now, arguably, one of the
world‚Äôs largest social shopping platforms. Similarly to Pinduoduo, Instagram has fostered a browsing-based feed from
friends and influencers of things that might interest consumers, often accompanied with links to purchase. The rise of
the social media influencer economy alone shows that US consumers are ready to fully engage in social online shopping.

In fact, we have already seen a few companies come through Y Combinator who are trying to fill this void.
[Snackpass](https://www.snackpass.co/), a food app for college campuses, has built social experiences into their
product. Students can send gifts to each other or hatch virtual pets together by ordering food via the app. These
interactive experiences encourage increased usage of the company‚Äôs product. [Meesho](https://meesho.com/), a reseller
marketplace in India, lets its customers create microbusinesses by selling products/goods to their friends and family
via Whatsapp and other messaging channels.

Companies like Amazon will continue to grow in market share, for specific shopping needs. But it is inevitable that
something will rise to fill the e-commerce-social browsing void in the US market. And the half-hearted attempts some
retail platforms are making to bridge that gap are not yet cutting it. Social commerce does not just mean connecting
user accounts to Facebook, it means creating new shopping experiences for buyers and sellers online.

Meanwhile Pinduoduo‚Äôs social commerce is only gaining sophistication and market influence. Pinduoduo has already
aggregated enough consumer insights that they are able to collaborate with and influence manufacturers in China to cater
to their user base. If there is a gap in the US e-commerce market, it is not just an opportunity to grow domestic online
retail. As the pandemic drives the worlds' social lives to the Internet, there is an undeniable opportunity for
companies to build social into their commerce platforms to accelerate the offline to online transition globally.

*Special thanks to the Pinduoduo team and Chloe Gordon for reading and editing multiple drafts of this essay.*

<b id="footnote1">1.</b> 20-F filings, 1USD:7CNY conversion rate [‚Ü©](#footnoteid1)  
<b id="footnote2">2.</b> As of April 30, 2020 [‚Ü©](#footnoteid2)  
<b id="footnote3">3.</b> As of December 31, 2019 [‚Ü©](#footnoteid3)  
<b id="footnote4">4.</b> eMarketer [‚Ü©](#footnoteid4)  
<b id="footnote5">5.</b> YC company data [‚Ü©](#footnoteid5)

[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - Has returned md secitons False paragraphs from the document.
[32m2024-02-05 23:14:46 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - chunked_blog_docs - Going into emedding mode
[32m2024-02-05 23:16:02 +0100[0m - dagster - [34mERROR[0m - [31m__ASSET_JOB - e78cd7c5-c05f-44a9-9fe2-432eae25ed3b - 9363 - chunked_blog_docs - STEP_FAILURE - Execution of step "chunked_blog_docs" failed.

dagster._core.errors.DagsterExecutionStepExecutionError: Error occurred while executing op "chunked_blog_docs"::

openai.InternalServerError: <html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>cloudflare</center>
</body>
</html>

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/utils.py", line 54, in op_execution_error_boundary
    yield
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_utils/__init__.py", line 467, in iterate_with_context
    next_output = next(iterator)
                  ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 131, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
             ^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 125, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/pipeline/assets.py", line 234, in chunked_blog_docs
    cleaned_documents = [
                        ^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/pipeline/assets.py", line 235, in <listcomp>
    {**blog, "content": chunk_document(blog)}
                        ^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/pipeline/assets.py", line 230, in chunk_document
    chunks, title = chunker.chunk_document()
                    ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/chunker/DocumentChunker.py", line 141, in chunk_document
    self.embed_paragraphs()
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/chunker/DocumentChunker.py", line 77, in embed_paragraphs
    batch_embeddings = [x.embedding for x in get_embedding(batch)]
                                             ^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/chunker/embeddings.py", line 15, in get_embedding
    response = client.embeddings.create(input=text, model=model)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/resources/embeddings.py", line 113, in create
    return self._post(
           ^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 1200, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 889, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 942, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 1013, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 927, in _request
    return self._retry_request(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 1013, in _retry_request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 980, in _request
    raise self._make_status_error_from_response(err.response) from None

The above exception occurred during handling of the following exception:
httpx.HTTPStatusError: Server error '502 Bad Gateway' for url 'https://api.openai.com/v1/embeddings'
For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 959, in _request
    response.raise_for_status()
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_models.py", line 759, in raise_for_status
    raise HTTPStatusError(message, request=request, response=self)

The above exception occurred during handling of the following exception:
httpx.ConnectTimeout: _ssl.c:989: The handshake operation timed out

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 918, in _request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 915, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 943, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 980, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 1016, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 230, in handle_request
    with map_httpcore_exceptions():
  File "/nix/store/03q8gn91mj95y5bqbcl90hyvmpqpz738-python3-3.11.7/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 84, in map_httpcore_exceptions
    raise mapped_exc(message) from exc

The above exception was caused by the following exception:
httpcore.ConnectTimeout: _ssl.c:989: The handshake operation timed out

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 67, in map_httpcore_exceptions
    yield
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 231, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 268, in handle_request
    raise exc
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 251, in handle_request
    response = connection.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 99, in handle_request
    raise exc
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 76, in handle_request
    stream = self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 156, in _connect
    stream = stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 152, in start_tls
    with map_exceptions(exc_map):
  File "/nix/store/03q8gn91mj95y5bqbcl90hyvmpqpz738-python3-3.11.7/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc

The above exception was caused by the following exception:
TimeoutError: _ssl.c:989: The handshake operation timed out

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 168, in start_tls
    raise exc
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_backends/sync.py", line 163, in start_tls
    sock = ssl_context.wrap_socket(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nix/store/03q8gn91mj95y5bqbcl90hyvmpqpz738-python3-3.11.7/lib/python3.11/ssl.py", line 517, in wrap_socket
    return self.sslsocket_class._create(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/nix/store/03q8gn91mj95y5bqbcl90hyvmpqpz738-python3-3.11.7/lib/python3.11/ssl.py", line 1108, in _create
    self.do_handshake()
  File "/nix/store/03q8gn91mj95y5bqbcl90hyvmpqpz738-python3-3.11.7/lib/python3.11/ssl.py", line 1383, in do_handshake
    self._sslobj.do_handshake()

The above exception occurred during handling of the following exception:
httpx.RemoteProtocolError: Server disconnected without sending a response.

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/openai/_base_client.py", line 918, in _request
    response = self._client.send(
               ^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 915, in send
    response = self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 943, in _send_handling_auth
    response = self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 980, in _send_handling_redirects
    response = self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_client.py", line 1016, in _send_single_request
    response = transport.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 230, in handle_request
    with map_httpcore_exceptions():
  File "/nix/store/03q8gn91mj95y5bqbcl90hyvmpqpz738-python3-3.11.7/lib/python3.11/contextlib.py", line 158, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 84, in map_httpcore_exceptions
    raise mapped_exc(message) from exc

The above exception was caused by the following exception:
httpcore.RemoteProtocolError: Server disconnected without sending a response.

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 67, in map_httpcore_exceptions
    yield
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpx/_transports/default.py", line 231, in handle_request
    resp = self._pool.handle_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 268, in handle_request
    raise exc
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py", line 251, in handle_request
    response = connection.handle_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 133, in handle_request
    raise exc
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 111, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 176, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/httpcore/_sync/http11.py", line 226, in _receive_event
    raise RemoteProtocolError(msg)
[0m
