[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - 75757 - LOGS_CAPTURED - Started capturing logs in process (pid: 75757).
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - 75757 - combined_and_cleaned_video_docs - STEP_START - Started execution of step "combined_and_cleaned_video_docs".
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - Loading file from: /Users/szymonzmyslony/projects/master-pipeline/pipeline/.dagster/storage/complete_video_content using PickledObjectFilesystemIOManager...
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - 75757 - combined_and_cleaned_video_docs - ASSET_OBSERVATION - DagsterEventType.ASSET_OBSERVATION for step combined_and_cleaned_video_docs
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - 75757 - combined_and_cleaned_video_docs - LOADED_INPUT - Loaded input "complete_video_content" using input manager "io_manager"
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mDEBUG[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - 75757 - combined_and_cleaned_video_docs - STEP_INPUT - Got input "complete_video_content" of type "Any". (Type check passed).
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - https://www.ycombinator.com/library/GV-should-you-start-a-startup
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - double_newline_count: 26
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - fetched_from_youtube: False
[32m2024-02-02 00:21:12 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - Splitting on double lines
[32m2024-02-02 00:21:13 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - We have 26 paragraphs
[32m2024-02-02 00:21:13 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - We have 5 chunks
[32m2024-02-02 00:21:13 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - https://www.ycombinator.com/library/6q-how-to-pitch-your-startup
[32m2024-02-02 00:21:13 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - double_newline_count: 90
[32m2024-02-02 00:21:13 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - fetched_from_youtube: False
[32m2024-02-02 00:21:13 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - Splitting on double lines
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - We have 90 paragraphs
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - We have 3 chunks
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - https://www.ycombinator.com/library/J0-inside-the-group-partner-lounge-when-to-launch-your-startup
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - double_newline_count: 1
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - fetched_from_youtube: True
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - Spitting on puncatation
[32m2024-02-02 00:21:16 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - i think this is image founders have of
the launch which is it's going to be
like the launch and it's going to be
like the oscar ceremony or something
where there's just going to be like
hordes of people and like and like
you're going to be treated like a
celebrity and so like you don't want to
turn up to the oscars in like your
scruffy like top and bottoms right like
you want to like you want to spend some
time getting in shape you want to be
looking good like it's just this whole
thing
[Music]
hi this is michael with harj and brad
and welcome to the partner lounge
so as yc partners we find ourselves
repeating the same seemingly obvious
advice to startup founders over and over
again before covid we'd often gather
together in the partner lounge at the yc
office to try to figure out why this was
the case and how we could help startups
figure it out faster now that we're in
the remote world we're going to do this
in front of all of you
so
the first topic we talked about today in
the partner lounge is
why don't startups like to launch early
and move quickly
hard to be honest
this is painfully obvious advice right
this is you know yc paul graham 101 like
no one applies to yc not knowing this is
what we're going to tell them right so
what do you think is going on why why do
you think people are getting screwed up
here
a bunch of reasons the first one that
springs to my mind is
you have to know what fast is to move
fast
um
and i i think one of the
things we get to see as partners is
across hundreds of companies and
founders the different speeds they can
move at and honestly i remember when i
first started working at yc it surprised
me right like i thought my startup we
were moving as fast as we could and then
you see some of the top companies you're
like wow
how do you get so much done in a week um
and so i think there's that effect i
think maybe a specific version of that
is if you've only ever worked at a big
company
like you might think you're moving fast
because you're moving big company fast
um
but like start up fast as a whole other
ball game
fast means you have to be a little bit
uncomfortable what's going out there you
know you were talking about instacart
before what are you what how dirty did
instacart look back in the day when when
you saw them go through yc i mean pretty
there's the classic story with instacart
which is we interviewed them and they um
did a demo of the product where they
like
clicked to order beer and beer turned up
um
pretty quickly and i think it actually
turned out it was like arpuva's friend
or someone just drove to the store
to like there was no back end right like
and so that kind of continued during yc2
from what i remember it wasn't like they
had they didn't spend a year building a
sophisticated fulfillment center with
complex algorithms to
you know
optimize delivery times pretty sure they
just had like the founders and maybe
some people off craigslist driving to
the grocery store to pick up groceries
pretty dirty like i think it was a good
ui but they the the product was um very
much hacked together
what's funny because brexit was almost
the exact opposite like when they come
in to tell their story at their batch
there was no ui like they could give you
a virtual credit card and like it worked
but that was it you couldn't see what
you spent money on you couldn't see how
much money you spent you couldn't
all they knew was that you had a card
and it worked one of the things though
that i think is going on
and you brought this up a little bit
hard is that like founders will lie to
themselves they will think i'm the
exception
i know the advice is good in general
i've heard all these great examples but
like we are different brad you were
talking a little bit about like
the idea that maybe i could
maybe i can do a perfect launch so how
do you think founders think about their
perfect launch and why they maybe can't
move fast
well i think the minute anyone starts
making something they start thinking
about
the moment when they show it to people
and what they want the reaction to look
like and sound like and feel like
and yet they also know that there's a
chance that it won't be like that
and it will be crushing
and devastating
and so i think every founder no matter
what they're working on has this like
parallel
universe in the back of their mind of
what the reaction is going to be to
their product
and when they let that parallel universe
kind of win out
over the reality that they need to get
it in front of people faster and not
worry about that it can slow them down
because they start optimizing for this
thing that is just living in their head
and it's not real at all i think this is
image founders have of the launch which
is it's going to be like the launch and
it's gonna be like the oscar ceremony or
something where there's just gonna be
like hordes of people
like and like you're gonna be treated
like a celebrity and so like you don't
wanna turn up to the oscars in like your
scruffy like top and bottoms right like
you want to like you want to spend some
time getting in shape you want to be
looking good like it's just this whole
thing like the reality is like often no
one cares
like you launch
there's no one there
well
the way you talk about it has a fallacy
baked into it the launch yeah right
right that it's that it's a singular
thing there's the launch of the product
and that's just not the case you launch
over and over and over again and it's
not a precious thing
the goal here is to get people excited
about what you're working on and show it
to the world and you might have to show
your thing to the world more than once
before they get it and like that's okay
like who cares you know like um brad you
were talking about like what's the worst
case scenario like what how do you like
how do you think about that like what do
you think founders are afraid of like
what do you think is like their worst
vision of a launch
so i think they're afraid that people
will think their product is ugly or that
it doesn't work well or that
they will notice immediately the thing
that the founders don't like about the
product and confirm their worries
they're afraid that
a competitor will hear about the product
they're afraid that um investors will
hear about the product
before it's ready
they're afraid of all these things but
then when you actually think about them
for more than two seconds you realize
that if you play out the worst possible
thing that could happen after each of
those occurrences
it's fine
one of the fun kind of mental
gymnastics moves that we see people do
is this like oh i did launch
we have a wait list of 3 000 people
we're ready to use the product or like
does it like what are you talk brad what
are you talking about we've already
launched right like
and then and then when we say oh great
um let's open up the wait list now
where's the button let's push the button
no no no
um yeah i think there's a whole um a
whole set of contortions
that certain types of founders have
figured out how to tie themselves up in
so that they can feel like they're
launching they can talk like they're
launching but they're not actually
putting a thing in front of people to
use just yet a waitlist is just a form
and you're not really getting product
feedback from that experience you know
it was funny because one of the best
examples i'm remembering from back in
the day at yc was a company named magic
and when they came up with the idea of
magic they launched two days later
and it was just a website with a phone
number and it just said text us and
we'll do whatever you like
and like
to me like that's the right spirit right
like they understood that they didn't
really know what was going on yet so
like let's just get this thing out there
and we'll start learning live versus
versus waiting
um
i do want to play devil's advocate
though right like there are these
examples of companies that founders will
throw in our face right we'll give this
advice they'll be like
harj and brad you all are idiots
remember dropbox remember ripling
remember a stripe like they didn't all
launch publicly in the first three days
of coming about
which one of you wants to kind of tackle
this one like what what is our what what
is our answer to the uh to the pushback
here
yeah like there are there are exceptions
you mentioned good ones i take one at a
time there like i take rippling right so
i think that i when rippling was going
through yc
they took close to like a year and a
half
or more maybe it was two years to sort
of officially launch um
and it turned out to be right actually
the company is like doing tremendously
well and i think my analysis on that
is
you in that case you had a founder who
was building a product he'd already
built for his last startups an unusual
case right i mean like and he'd have
tons of users um like zenefit was like a
big startup growing really quickly and
then on top of that like
his benefit itself was a customer of
zenefit like and so i think with parker
you got this like incredibly unusual
deep level of
product insight and domain expertise and
so he was actually the example of where
he could come up in his head
with here's what the product needs to be
it needs to actually be like a lot of
product it's going to take us like some
time to build this amount of product and
we're only makes sense to launch like
the mvp was robust um
and he could trust his instincts right
because he had this unusual depth of
experience with what to build
but brad how rare is that how often are
we
interacting with founders
who have used and built a massive
product doing the thing they're already
doing before they decide to do that
again
it's pretty rare it doesn't happen that
often
and it's not always a fun office hour
because you don't want to say
you're you're not parker right
you don't want to throw it in their face
to that extent the thing that i think is
really great about the rippling example
is that the first time he built the
product with zenefits he did not spend a
year and a half
in fact he's one of the i think the
greatest examples of what we were
talking about earlier i remember when i
was working on my company in san
francisco he emailed me out of the blue
while he was in the batch
said i'm working on this new benefits
thing i'd love to come to your office
and show it to you and so
my company is building this ad tool we
spent a year polishing the ui and making
it all great and he shows up with this
um with this hr software that was
beautiful
it was it had it was feature rich it had
everything you could possibly need it
and blew me away
and i thought how the heck did this guy
build this so quickly this is incredible
and what i didn't know was that it was a
bunch of forms and there was not a back
end at the time
and so
that first time when he was not the
expert
in what the product needs to do didn't
have that knowledge that's the strategy
that he took
and then the second time after he'd
already built this he was able that he'd
earned the right
to do the big build and make it that way
i think this is like the common trap
that founders have is that like they
know five percent of the story and they
don't know the other 95 percent of the
story so
that's another kind of thing that i
think people need to dig in a little bit
to when they think of these exceptions
like
how can they be rigorous about making
sure they're
they know what really happened
one of the things i love to encourage
founders to do is to go back to
um something like github and go to the
blog and go to the beginning
of the blog
you know 10 years ago or whenever and
and look at the screenshots from then
look at the feature announcements from
them and just try to internalize
that the the stakes were lower the
features were simpler the feature set
was simpler and they were just getting
on the board and it wasn't this huge
gargantuan product that you think of now
so if we're gonna wrap up here
if the if you're uh
early stage founder listening to this
and you are a parker conrad you've
already built a billion dollar company
doing this exact same thing before and
now you know exactly how to do it right
you should ignore all the advice we gave
in this talk
if you're not
then kind of what harj and brad were
saying beginning you already know
launching fast and moving fast is the
right thing to do so just do it right
just just do it right at the end of the
day
you choose every day you decide not to
launch you choose every day you decide
to go at 10 miles an hour versus 100
miles an hour
maybe today you should choose
differently
all right thanks brad thanks harj thanks
guys
thank you
[Music]
you


[32m2024-02-02 00:21:17 +0100[0m - dagster - [34mINFO[0m - __ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - combined_and_cleaned_video_docs - Len of para is 0
[32m2024-02-02 00:21:17 +0100[0m - dagster - [34mERROR[0m - [31m__ASSET_JOB - cc0649b1-835e-436f-ba7a-32faa18da6b1 - 75757 - combined_and_cleaned_video_docs - STEP_FAILURE - Execution of step "combined_and_cleaned_video_docs" failed.

dagster._core.errors.DagsterExecutionStepExecutionError: Error occurred while executing op "combined_and_cleaned_video_docs"::

IndexError: index -1 is out of bounds for axis 0 with size 0

Stack Trace:
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/utils.py", line 54, in op_execution_error_boundary
    yield
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_utils/__init__.py", line 467, in iterate_with_context
    next_output = next(iterator)
                  ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 131, in _coerce_op_compute_fn_to_iterator
    result = invoke_compute_fn(
             ^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/dagster/_core/execution/plan/compute_generator.py", line 125, in invoke_compute_fn
    return fn(context, **args_to_pass) if context_arg_provided else fn(**args_to_pass)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/pipeline/assets.py", line 281, in combined_and_cleaned_video_docs
    cleaned_documents = [
                        ^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/pipeline/assets.py", line 286, in <listcomp>
    chunk_document(video, video["fetching_transcript"])
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/pipeline/assets.py", line 276, in chunk_document
    transript_chunks, _ = transcript_chunker.chunk_document()
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/chunker/DocumentChunker.py", line 143, in chunk_document
    self.calculate_distances_and_chunk()
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/chunker/DocumentChunker.py", line 119, in calculate_distances_and_chunk
    indices_above_thresh = get_indices_above_threshold(
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/projects/master-pipeline/pipeline/chunker/embeddings.py", line 21, in get_indices_above_threshold
    breakpoint_distance_threshold = np.percentile(
                                    ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/numpy/lib/function_base.py", line 4283, in percentile
    return _quantile_unchecked(
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/numpy/lib/function_base.py", line 4555, in _quantile_unchecked
    return _ureduce(a,
           ^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/numpy/lib/function_base.py", line 3823, in _ureduce
    r = func(a, **kwargs)
        ^^^^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/numpy/lib/function_base.py", line 4721, in _quantile_ureduce_func
    result = _quantile(arr,
             ^^^^^^^^^^^^^^
  File "/Users/szymonzmyslony/Library/Caches/pypoetry/virtualenvs/pipeline-RtkjAAJa-py3.11/lib/python3.11/site-packages/numpy/lib/function_base.py", line 4830, in _quantile
    slices_having_nans = np.isnan(arr[-1, ...])
                                  ~~~^^^^^^^^^
[0m
